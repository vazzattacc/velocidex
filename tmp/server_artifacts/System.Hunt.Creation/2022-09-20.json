{"Timestamp":1663651851,"Hunt":{"hunt_id":"H.CCKL02R0HN01S","create_time":1663651851371316,"creator":"ngrok","expires":1664256582849000,"hunt_description":"prueba","start_request":{"artifacts":["Generic.Client.Info"],"specs":[{"artifact":"Generic.Client.Info","parameters":{}}],"compiled_collector_args":[{"query_id":1,"total_queries":3,"Query":[{"VQL":"LET Interfaces=SELECT format(format='%02x:%02x:%02x:%02x:%02x:%02x', args=HardwareAddr) AS MAC FROM interfaces() WHERE HardwareAddr"},{"VQL":"LET Generic_Client_Info_BasicInformation_0_1=SELECT config.Version.Name AS Name, config.Version.BuildTime AS BuildTime, config.Version.Version AS Version, config.Version.ci_build_url AS build_url, config.Labels AS Labels, Hostname, OS, Architecture, Platform, PlatformVersion, KernelVersion, Fqdn, Interfaces.MAC AS MACAddresses FROM info()"},{"Name":"$ab555fd67fe4ab96dfcc43417eff0561e21c83f61f1af451037db4fbbb06569858aaabce7dc3ed5e116ecd13faa1a0c4","VQL":"SELECT * FROM Generic_Client_Info_BasicInformation_0_1"}],"max_row":1000},{"query_id":2,"total_queries":3,"precondition":"SELECT OS From info() where OS = 'windows'","Query":[{"VQL":"LET precondition_Generic_Client_Info_WindowsInfo_0=SELECT OS FROM info() WHERE OS = 'windows'"},{"VQL":"LET DomainLookup\u003c=dict(`0`='Standalone Workstation', `1`='Member Workstation', `2`='Standalone Server', `3`='Member Server', `4`='Backup Domain Controller', `5`='Primary Domain Controller')"},{"VQL":"LET Generic_Client_Info_WindowsInfo_0_1=SELECT { SELECT DNSHostName, Name, Domain, TotalPhysicalMemory, get(item=DomainLookup, field=str(str=DomainRole), default=\"Unknown\") AS DomainRole FROM wmi(query='SELECT * FROM win32_computersystem') } AS `Computer Info`, { SELECT Caption, join(array=IPAddress, sep=\", \") AS IPAddresses, join(array=IPSubnet, sep=\", \") AS IPSubnet, MACAddress, join(array=DefaultIPGateway, sep=\", \") AS DefaultIPGateway, DNSHostName, join(array=DNSServerSearchOrder, sep=\", \") AS DNSServerSearchOrder FROM wmi(query=\"SELECT * from Win32_NetworkAdapterConfiguration\") WHERE IPAddress } AS `Network Info` FROM scope()"},{"Name":"$ab555fd67fe4ab96dfcc43417eff0561ee8583fc61bd7b81ae888fe9bd253aa6","VQL":"SELECT * FROM if(then=Generic_Client_Info_WindowsInfo_0_1, condition=precondition_Generic_Client_Info_WindowsInfo_0, else= { SELECT * FROM scope() WHERE log(message='Query skipped due to precondition') AND FALSE})"}],"max_row":1000},{"query_id":3,"total_queries":3,"precondition":"SELECT OS From info() where OS = 'windows'","Query":[{"VQL":"LET precondition_Generic_Client_Info_Users_0=SELECT OS FROM info() WHERE OS = 'windows'"},{"VQL":"LET Generic_Client_Info_Users_0_0=SELECT Name, Description, Mtime AS LastLogin FROM Artifact.Windows.Sys.Users(OnlyRemote=TRUE)"},{"Name":"$ab555fd67fe4ab96dfcc43417eff05616f6186c79f20c940b190184e7a667221","VQL":"SELECT * FROM if(then=Generic_Client_Info_Users_0_0, condition=precondition_Generic_Client_Info_Users_0, else= { SELECT * FROM scope() WHERE log(message='Query skipped due to precondition') AND FALSE})"}],"max_row":1000,"artifacts":[{"name":"Windows.Sys.Users","parameters":[{"name":"remoteRegKey","default":"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*"},{"name":"OnlyRemote","type":"bool"}],"type":"client","sources":[{"precondition":"SELECT OS FROM info() WHERE OS = 'windows'","queries":["LET GetTimestamp(High,Low)=if(condition=High, then=timestamp(winfiletime=High * 4294967296 + Low))","LET roaming_users\u003c=SELECT split(string=Key.OSPath.Basename, sep=\"-\")[-1] AS Uid, \"\" AS Gid, lookupSID(sid=Key.OSPath.Basename) || \"\" AS Name, Key.OSPath AS Description, ProfileImagePath AS Directory, Key.OSPath.Basename AS UUID, Key.Mtime AS Mtime, { SELECT Mtime FROM stat(filename=expand(path=ProfileImagePath)) } AS HomedirMtime, \"roaming\" AS Type, dict(ProfileLoadTime=GetTimestamp(High=LocalProfileLoadTimeHigh, Low=LocalProfileLoadTimeLow), ProfileUnloadTime=GetTimestamp(High=LocalProfileUnloadTimeHigh, Low=LocalProfileUnloadTimeLow)) AS Data FROM read_reg_key(globs=remoteRegKey, accessor=\"registry\")","LET local_users\u003c=SELECT User_id AS Uid, Primary_group_id AS Gid, Name, Comment AS Description, { SELECT * FROM roaming_users WHERE User_sid = UUID } AS RoamingData, User_sid AS UUID, \"local\" AS Type FROM users()","LET local_users_with_mtime=SELECT Uid, Gid, Name, Description, RoamingData.Directory AS Directory, UUID, RoamingData.Mtime AS Mtime, RoamingData.HomedirMtime AS HomedirMtime, Type, RoamingData.Data || dict() AS Data FROM local_users","LET combined=SELECT * FROM chain(q1=local_users_with_mtime, q2= { SELECT * FROM roaming_users WHERE NOT UUID IN local_users.UUID})","SELECT * FROM if(condition=OnlyRemote, then=roaming_users, else=combined)"]}]}]}]},"condition":{"UnionField":null},"stats":{},"artifacts":["Generic.Client.Info"],"artifact_sources":["Generic.Client.Info/BasicInformation","Generic.Client.Info/WindowsInfo","Generic.Client.Info/Users"],"state":1},"_ts":1663651851}
